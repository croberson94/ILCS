
#include <RGBLEDLighting.h>
#include <Wire.h>

InfineonRGB LEDS;  // Create Object

  //declare all variables needed

  //declare all variables needed
  int intensity_red;
  int intensity_green;
  int intensity_blue;
  int sensor_red;
  int sensor_blue;
  int sensor_green;
  int tempsens1;
  int tempsens2;
  int tempsens3;
  int tempsens4;

  /*
   * dimming values will be placed in an array, this array may be prestored during  
   * development OR this array may be generated by an algorithm based on initial conditions
   * and time constraints
   */
  int dimming_array = {}

void setup() {

    Serial.begin(38400); // Starts the serial connection at 38400 baud

  /*
   * This begin method is problematic, mostly because it sets all the settings back to zero 
   * we must rework this statement before we bring this to production
   */
    LEDS.begin();    
    
  
  /*
   * WALKTIME:
   *The RGB LED Shield calculates the actual linear walktime with the formula:
   *Linear Walk Time = WALKTIME * 0.0124
    */
  //LEDS.I2CWRITE2BYTES(0x15E,WALKTIME,0xC3);  // Set walk time to 2 seconds
  /*
   * DIMMING LEVEL:
   * The curve is quantized into 4095 steps, pseudo exponential curve.
   * *NOTE* The brightness value of a channel = intesity*diming level/4096
   */
  //LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0x19A); // 10% Brightness

   
  //LEDS.I2CWRITE2BYTES(0x15E,FADERATE,0x6E);  // Set faderate
  
}

void loop() {
  Serial.println("the board is reset");
  Serial.println("test");
  Serial.println(millis());
  LEDS.I2CWRITE6BYTES(0x15E,INTENSITY_RGB, 0x566,0x555,0x555);  //changes color spectrum 
  Serial.println("will this ever print?");
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0x19A); // 10% Brightness
//  delay(4000); // wait 4 seconds
  intensity_red = LEDS.I2CREAD(0x15E, READ_INTENSITY_RED);
//  intensity_green = LEDS.I2CREAD(0x15E, READ_INTENSITY_GREEN);
//  intensity_blue = LEDS.I2CREAD(0x15E, READ_INTENSITY_BLUE);
  Serial.println(intensity_red);
  delay(8000); 
//  Serial.println("\n");
//  Serial.println(intensity_green);
//  Serial.println("\n");
//  Serial.println(intensity_blue);
//  Serial.println("\n");
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0x332); // 20% Brightnes
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0x4CC); // 30% Brightness
//  LEDS.I2CWRITE6BYTES(0x15E,INTENSITY_RGB, 0x55F,0x555,0x555);
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0x665); // 40% Brightness
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0x7FF); // 50% Brightness
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0x998); // 60% Brightness
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE6BYTES(0x15E,INTENSITY_RGB, 0x555,0x555,0x55F);
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0xB31); // 70% Brightness
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0xCCB); // 80% Brightness
//  delay(4000); // wait 4 seconds
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE6BYTES(0x15E,INTENSITY_RGB, 0x555,0x555,0x566);
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0xE64); // 90% Brightness
//  delay(4000); // wait 4 seconds
//  LEDS.I2CWRITE2BYTES(0x15E,DIMMINGLEVEL,0xFFF); // 100% Brightness
//  delay(4000); // wait 4 seconds
  
}
